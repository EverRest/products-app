services:
  # PHP Service
  app:
    build:
      context: .
      dockerfile: docker/Dockerfile
    working_dir: /var/www/html
    volumes:
      - .:/var/www/html
      - ./docker/nginx:/etc/nginx/conf.d
    depends_on:
      - db
    networks:
      - products-app-network

  # Nginx Service
  web:
    image: nginx:latest
    restart: on-failure
    volumes:
      - .:/var/www/html
      - ./docker/nginx:/etc/nginx/conf.d
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - app
    networks:
      - products-app-network

  # MYSQL Service
  db:
    image: mysql:8.0
    container_name: db
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
    volumes:
      - dbdata:/var/lib/mysql/
      - ./docker/mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - products-app-network

  # Test MYSQL Service
  testdb:
    image: mysql:8.0
    container_name: testdb
    restart: unless-stopped
    tty: true
    ports:
      - "3307:3306"
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
    volumes:
      - testdbdata:/var/lib/mysql/
      - ./docker/mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - products-app-network

networks:
  products-app-network:
    driver: bridge

volumes:
  dbdata:
  testdbdata:
